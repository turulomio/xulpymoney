#!/usr/bin/python    
# -*- coding: utf-8 -*-  
import os, adodb, datetime, sys


class Color:
    esc_seq = "\x1b["
    codes={}
    codes["reset"]     = esc_seq + "39;49;00m"
    codes["bold"]      = esc_seq + "01m"
    codes["faint"]     = esc_seq + "02m"
    codes["standout"]  = esc_seq + "03m"
    codes["underline"] = esc_seq + "04m"
    codes["blink"]     = esc_seq + "05m"
    codes["overline"]  = esc_seq + "06m"  # Who made this up? Seriously.
    codes["teal"]      = esc_seq + "36m"
    codes["turquoise"] = esc_seq + "36;01m"
    codes["fuchsia"]   = esc_seq + "35;01m"
    codes["purple"]    = esc_seq + "35m"
    codes["blue"]      = esc_seq + "34;01m"
    codes["darkblue"]  = esc_seq + "34m"
    codes["green"]     = esc_seq + "32;01m"
    codes["darkgreen"] = esc_seq + "32m"
    codes["yellow"]    = esc_seq + "33;01m"
    codes["brown"]     = esc_seq + "33m"
    codes["red"]       = esc_seq + "31;01m"
    codes["darkred"]   = esc_seq + "31m"
    
    def resetColor(self, ):
        return self.codes["reset"]
    def ctext(self, color,text):
        return self.codes[ctext]+text+self.codes["reset"]
    def bold(self, text):
        return self.codes["bold"]+text+self.codes["reset"]
    def white(self, text):
        return bold(text)
    def teal(self, text):
        return self.codes["teal"]+text+self.codes["reset"]
    def turquoise(self, text):
        return self.codes["turquoise"]+text+self.codes["reset"]
    def darkteal(self, text):
        return turquoise(text)
    def fuchsia(self, text):
        return self.codes["fuchsia"]+text+self.codes["reset"]
    def purple(self, text):
        return self.codes["purple"]+text+self.codes["reset"]
    def blue(self, text):
        return self.codes["blue"]+text+self.codes["reset"]
    def darkblue(self, text):
        return self.codes["darkblue"]+text+self.codes["reset"]
    def green(self, text):
        return self.codes["green"]+text+self.codes["reset"]
    def darkgreen(self, text):
        return self.codes["darkgreen"]+text+self.codes["reset"]
    def yellow(self, text):
        return self.codes["yellow"]+text+self.codes["reset"]
    def brown(self, text):
        return self.codes["brown"]+text+self.codes["reset"]
    def darkyellow(self, text):
        return brown(text)
    def red(self, text):
        return self.codes["red"]+text+self.codes["reset"]
    def darkred(self, text):
        return self.codes["darkred"]+text+self.codes["reset"]


def strdividendomalo():
    if dividendomalo==True:
        return " " + Color().red("Dividendo <3%")
    else:
        return ""

def strexcesocapital():
    if excesocapital==True:
        return " " + Color().fuchsia("Inversión >60.000€")
    else:
        return ""


con = adodb.NewADOConnection("postgres")
con.Connect("127.0.0.1","postgres","*", sys.argv[1])


sql='select id_inversiones, inversion, dividendo, inversion_invertido(inversiones.id_inversiones, \''+str(datetime.date.today())+'\') as invertido from inversiones, cuentas, entidadesbancarias where inversiones.id_cuentas=cuentas.id_cuentas and cuentas.id_entidadesbancarias=entidadesbancarias.id_entidadesbancarias and inversiones.in_activa=true and inversiones.tpcvariable in (100, -100) order by inversion'
curs=con.Execute(sql)
while not curs.EOF:
    row = curs.GetRowAssoc(0)   
    dividendomalo=False
    excesocapital=False

    if row['dividendo']<3:
        dividendomalo=True    
    if row['invertido']>60000:
        excesocapital=True
    if strdividendomalo()+strexcesocapital()!="":
        print str(row['id_inversiones'])+ " " + row['inversion'] + strdividendomalo() + strexcesocapital() 
    curs.MoveNext()     
curs.Close()

sys.exit(0)
